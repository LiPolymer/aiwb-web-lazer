---
import type { ImageMetadata } from 'astro'
import { Image } from 'astro:assets'

import type { iconsType } from 'astro-pure/types'
import { Icon } from 'astro-pure/user'
import { cn } from 'astro-pure/utils'

interface Props {
  class?: string
  project: {
    project_name: string
    description: string
    links: object[]
    languaages: string[]
    section: string
  }[]
}
const { class: className, project, ...props } = Astro.props
const projectIconSet: Record<string, iconsType> = {
  github: 'github-circle',
  site: 'earth',
  doc: 'document',
  release: 'package'
}
---

<div class={className} {...props}>
  <div class='grid grid-cols-1 gap-x-4 gap-y-3 sm:grid-cols-2 sm:gap-y-4'>
    {
      project.map((project) => {
        return (
          <div class='relative overflow-hidden rounded-xl border'>
            <div class='relative z-10 flex flex-col gap-y-2 px-3 py-1.5 sm:px-4 sm:py-3'>
              <a
                class='line-clamp-1 font-medium text-foreground no-underline transition-colors'
                href={project.links[0].href}
                target='_blank'
              >
                {project.name}
              </a>
              <div class='line-clamp-2 leading-snug text-muted-foreground sm:h-12'>
                {project.description}
              </div>
              <div class='flex flex-row items-center gap-x-2 sm:gap-x-3'>
                {project.links.map((link) => {
                  const icon = projectIconSet[link.type]
                  return (
                    <a
                      href={link.href}
                      class='rounded-full bg-muted p-1 text-muted-foreground transition-colors sm:p-1.5'
                      aria-label={link.type}
                      target='_blank'
                    >
                      <Icon class='size-5' name={icon} />
                    </a>
                  )
                })}
              </div>
            </div>
          </div>
        )
      })
    }
  </div>
</div>
